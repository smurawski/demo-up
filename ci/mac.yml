parameters:
  name: 'demo'

steps:
  - script: |
      export PATH="~/.cargo/bin:$PATH"
      if command -v rustup >/dev/null; then
        rustup install stable-x86_64-apple-darwin
      else
          curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable-x86_64-apple-darwin -y
      fi
    displayName: Install Rust

  - script: |
      export PATH="~/.cargo/bin:$PATH"
      rustup component add rustfmt 
      cargo fmt -- --check
    displayName: Validate Formatting

  - script: |
      export PATH="~/.cargo/bin:$PATH"
      cargo check
    displayName: Cargo Check

  - script: |
      export PATH="~/.cargo/bin:$PATH"
      cargo test
    displayName: Run Tests

  - script: |
      export PATH="~/.cargo/bin:$PATH"
      cargo build --release
    displayName: Build Release

  - script: |
      mv ./target/release/${{ parameters.name }} ./target/release/${{ parameters.name }}-darwin
    displayName: Rename Executable

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact: Release Build"
    inputs:
      PathtoPublish: ./target/release/${{ parameters.name }}-darwin
      ArtifactName: drop
      ArtifactType: Container
      TargetPath: "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
      Parallel: "false"
      ParallelCount: "8"
